{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskAPP\\\\frontend\\\\src\\\\components\\\\Tasklist.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasklist = ({\n  tasks,\n  fetchTasks\n}) => {\n  const handleComplete = async taskId => {\n    try {\n      await axios.post('http://localhost:5000/api/tasks/complete', {\n        taskId\n      });\n      fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleDelete = async taskId => {\n    try {\n      await axios.post('http://localhost:5000/api/tasks/delete', {\n        taskId\n      });\n      fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-card ${task.completed ? 'completed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created: \", new Date(task.createdAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [!task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComplete(task.id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Tasklist;\nexport default Tasklist;\nvar _c;\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Tasklist","tasks","fetchTasks","handleComplete","taskId","post","err","console","error","handleDelete","className","children","map","task","completed","title","fileName","_jsxFileName","lineNumber","columnNumber","description","Date","createdAt","toLocaleDateString","onClick","id","_c","$RefreshReg$"],"sources":["D:/TaskAPP/frontend/src/components/Tasklist.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Tasklist = ({ tasks, fetchTasks }) => {\r\n  const handleComplete = async (taskId) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/tasks/complete', { taskId });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (taskId) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/tasks/delete', { taskId });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map((task) => (\r\n        <div key={task.id} className={`task-card ${task.completed ? 'completed' : ''}`}>\r\n          <h4>{task.title}</h4>\r\n          <p>{task.description}</p>\r\n          <p>Created: {new Date(task.createdAt).toLocaleDateString()}</p>\r\n          <div className=\"task-actions\">\r\n            {!task.completed && (\r\n              <button onClick={() => handleComplete(task.id)}>Complete</button>\r\n            )}\r\n            <button onClick={() => handleDelete(task.id)}>Delete</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasklist;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAC1C,MAAMC,cAAc,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI;MACF,MAAMP,KAAK,CAACQ,IAAI,CAAC,0CAA0C,EAAE;QAAED;MAAO,CAAC,CAAC;MACxEF,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,MAAM,IAAK;IACrC,IAAI;MACF,MAAMP,KAAK,CAACQ,IAAI,CAAC,wCAAwC,EAAE;QAAED;MAAO,CAAC,CAAC;MACtEF,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBV,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdd,OAAA;MAAmBW,SAAS,EAAE,aAAaG,IAAI,CAACC,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;MAAAH,QAAA,gBAC7EZ,OAAA;QAAAY,QAAA,EAAKE,IAAI,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBpB,OAAA;QAAAY,QAAA,EAAIE,IAAI,CAACO;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpB,OAAA;QAAAY,QAAA,GAAG,WAAS,EAAC,IAAIU,IAAI,CAACR,IAAI,CAACS,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DpB,OAAA;QAAKW,SAAS,EAAC,cAAc;QAAAC,QAAA,GAC1B,CAACE,IAAI,CAACC,SAAS,iBACdf,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMrB,cAAc,CAACU,IAAI,CAACY,EAAE,CAAE;UAAAd,QAAA,EAAC;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACjE,eACDpB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACI,IAAI,CAACY,EAAE,CAAE;UAAAd,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA,GATEN,IAAI,CAACY,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GApCI1B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}